{"version":3,"sources":["components/NavBar.js","components/Home.js","components/AccordianCowCard.js","components/SkeletonCowCard.js","components/Report.js","lib/prioritizeData.js","lib/xlinkClient.js","components/Reports.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","Fragment","Box","className","style","position","width","height","top","zIndex","backgroundColor","AppBar","clipPath","Toolbar","button","Typography","variant","Home","bgcolor","p","List","ListItem","divider","component","href","ListItemText","primary","Data","color","this","label","fontSize","data","Component","AccordianCowCard","list","Object","keys","mainItem","toplist","slice","botlist","Accordion","AccordionSummary","expandIcon","id","Grid","container","justify","spacing","item","xs","Chip","map","ele","AccordionDetails","xm","SkeletonCowCard","Skeleton","animation","Report","BackButton","IconButton","edge","ArrowBackIos","onRefresh","refreshReport","reportName","isLoading","length","row","align","refreshTime","prioritizeData","datas","priorityFields","console","log","sort","x","y","xInd","indexOf","yInd","ordered","reduce","obj","key","fetchCollectCows","fetchFromXlink","fetchCowsDue","path","fetch","then","res","json","CollectCowsReport","fetchData","CowsDueReport","dataToPrepend","ReportWithData","useState","setData","setLoading","time","setTime","fetchNewData","result","Promise","r","setTimeout","dd","concat","moment","format","error","useEffect","theme","createMuiTheme","palette","main","background","default","body","secondary","App","ThemeProvider","CssBaseline","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAIaA,EAAS,SAACC,GACrB,OACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAUC,MAAO,CAC9BC,SAAU,QACVC,MAAO,OACPC,OAAQ,QACRC,IAAK,SACLC,OAAQ,KACRC,gBAAiB,aAEnB,cAACC,EAAA,EAAD,CAAQN,SAAS,SAASD,MAAO,CAAEQ,SAAU,gCAA7C,SACE,eAACC,EAAA,EAAD,WACGb,EAAMc,OACP,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,mCCbGC,EAAO,WAClB,OACE,eAAC,IAAMhB,SAAP,WACE,cAACC,EAAA,EAAD,CAAKgB,QAAQ,QAAQZ,MAAM,QAAQC,OAAO,QAAQH,MAAO,CACvDC,SAAU,QACVI,OAAQ,QAER,cAAC,EAAD,IACA,cAACP,EAAA,EAAD,CAAKiB,EAAG,EAAR,SACE,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAEF,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAUC,SAAO,EAACR,QAAM,EAACS,UAAU,IAAIC,KAAK,iBAA5C,SACE,cAACC,EAAA,EAAD,CAAcC,QAAQ,mBAExB,cAACL,EAAA,EAAD,CAAUC,SAAO,EAACR,QAAM,EAACS,UAAU,IAAIC,KAAK,aAA5C,SACE,cAACC,EAAA,EAAD,CAAcC,QAAQ,sB,yJCjB5BC,E,4JACJ,WACE,OACE,gCACE,cAACZ,EAAA,EAAD,CAAYC,QAAQ,UAAUY,MAAM,gBAApC,SACGC,KAAK7B,MAAM8B,QAEd,cAACf,EAAA,EAAD,CAAYX,MAAO,CAAE2B,SAAU,IAAMf,QAAQ,QAA7C,SACGa,KAAK7B,MAAMgC,c,GARHC,aAeRC,EAAmB,SAAClC,GAC7B,IAAImC,EAAOC,OAAOC,KAAKrC,EAAMgC,MACzBM,EAAWH,EAAK,GAChBI,EAAUJ,EAAKK,MAAM,EAAG,GACxBC,EAAUN,EAAKK,MAAM,GAEzB,OACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZ,gBAAc,mBACdC,GAAG,kBAHL,SAKE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAeC,QAAS,EAAhD,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMxB,MAAM,UAAUE,MAAO9B,EAAMgC,KAAKM,OAGzCC,EAAQc,KAAI,SAAAC,GAAG,OAAI,cAACR,EAAA,EAAD,CAAMI,MAAI,EAAV,SAClB,cAAC,EAAD,CAAMpB,MAAOwB,EAAKtB,KAAMhC,EAAMgC,KAAKsB,eAKzC,cAACC,EAAA,EAAD,UACE,cAACT,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAzB,SACGR,EAAQY,KAAI,SAAAC,GAAG,OAAI,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGK,GAAI,EAAtB,SAClB,cAAC,EAAD,CAAM1B,MAAOwB,EAAKtB,KAAMhC,EAAMgC,KAAKsB,kB,iBC1ClCG,EAAkB,WAC7B,OACE,cAACf,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE,gBAAc,mBACdE,GAAG,kBAFL,SAIE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAeC,QAAS,EAAhD,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAACO,EAAA,EAAD,CAAU1C,QAAQ,SAASV,MAAO,GAAIC,OAAQ,OAEhD,eAACuC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACE,cAACO,EAAA,EAAD,CAAU1C,QAAQ,OAAO2C,UAAU,SACnC,cAACD,EAAA,EAAD,CAAU1C,QAAQ,OAAO2C,UAAU,oBCRlCC,EAAS,SAAC5D,GACrB,IAAM6D,EACJ,cAACC,EAAA,EAAD,CAAY1D,MAAO,CAAEwB,MAAO,SAAWmC,KAAK,QAAQvC,KAAK,IAAzD,SACE,cAACwC,EAAA,EAAD,MAGJ,OACE,eAAC,IAAM/D,SAAP,WACE,cAACC,EAAA,EAAD,CAAKgB,QAAQ,QAAQZ,MAAM,QAAQC,OAAO,QAAQH,MAAO,CACvDC,SAAU,QACVI,OAAQ,QAER,cAAC,EAAD,CAAQK,OAAQ+C,IAChB,cAAC,IAAD,CAAUI,UAAWjE,EAAMkE,cAA3B,SACE,eAAChE,EAAA,EAAD,CAAKgB,QAAQ,QAAb,UAEE,cAAChB,EAAA,EAAD,CAAKiB,EAAG,EAAR,SAEE,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BhB,EAAMmE,YAAcnE,EAAMoE,UAAY,GAAK,MAAQpE,EAAMgC,KAAKqC,YAEzFrE,EAAMgC,KAAKqB,KAAI,SAAAiB,GAAG,OAAItE,EAAMoE,UAAY,cAAC,EAAD,IAAsC,cAAC,EAAD,CAAkBpC,KAAMsC,OACvG,cAACpE,EAAA,EAAD,CAAKiB,EAAG,EAAR,SACA,eAACJ,EAAA,EAAD,CAAYC,QAAQ,QAAQZ,MAAO,CAAE2B,SAAU,IAAMH,MAAM,gBAAgB2C,MAAM,SAAjF,gCAA8GvE,EAAMwE,0BC7BzH,SAASC,EAAeC,GAA6B,IAAtBC,EAAqB,uDAAJ,GACrDC,QAAQC,IAAI,UAAYH,GAExB,IAAII,EAAO,SAACC,EAAGC,GACb,IAAIC,EAAON,EAAeO,QAAQH,GAC9BI,EAAOR,EAAeO,QAAQF,GAKlC,OAHAC,GAAgB,GAATA,EAAa,IAAOA,IAC3BE,GAAgB,GAATA,EAAa,IAAOA,IAGjB,EAED,GAIPC,EAAUV,EAAMrB,KAAI,SAAUrB,GAChC,OAAOI,OAAOC,KAAKL,GAAM8C,KAAKA,GAAMO,QAClC,SAACC,EAAKC,GAEJ,OADAD,EAAIC,GAAOvD,EAAKuD,GACTD,IAET,OAMJ,OAFAV,QAAQC,IAAI,YAAcO,GAEnBA,EC/BT,IAGaI,EAAmB,WAC5B,OAAOC,EAAe,iBAGbC,EAAe,WACxB,OAAOD,EAAe,aAGpBA,EAAiB,SAACE,GACpB,OAAOC,MAZY,gDAYWD,GAC3BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCPVC,EAAoB,SAAChG,GAEhC,OAAQ,cAAC,EAAD,CAAgBmE,WAAW,eAAe8B,UAAWT,EAAkBb,eADxD,CAAC,gBAAiB,OAAQ,iBAAkB,qBAIxDuB,EAAgB,SAAClG,GAK5B,OAAQ,cAAC,EAAD,CAAgBmE,WAAW,WAAW8B,UAAWP,EAAcf,eAJhD,CAAC,gBAAiB,cAAe,yBAI+CwB,cAHlF,CACnB,CAAC,gBAAiB,KAAM,cAAe,aAAc,wBAAyB,UAAW,IAAO,KAAM,kBAAmB,GAAI,gBAAiB,IAAK,QAAS,6BAM1JC,EAAiB,SAACpG,GAEtB,MAAwBqG,mBAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAtE,mBAAOrE,EAAP,KAAasE,EAAb,KACA,EAAgCD,oBAAS,GAAzC,mBAAOjC,EAAP,KAAkBmC,EAAlB,KACA,EAAwBF,mBAAS,SAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEIC,EAAe,WACjBH,GAAW,GACXvG,EAAMiG,YACHJ,KADH,iDAEI,WAAOc,GAAP,iGACQ,IAAIC,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,QADvC,OAEME,EAAKtC,EAAekC,EAAQ3G,EAAM2E,gBACtCC,QAAQC,IAAI,QACR7E,EAAMmG,gBACRvB,QAAQC,IAAI7E,EAAMmG,eAClBY,EAAKA,EAAGvE,MAAM,EAAG,GAAGwE,OAAOhH,EAAMmG,eAAea,OAAOD,EAAGvE,MAAM,KAElE8D,EAAQS,GACRR,GAAW,GACXE,EAAQQ,MAASC,OAAO,WAV1B,2CAFJ,uDAkBI,SAACC,GACCvC,QAAQC,IAAI,0BASpB,OAJAuC,qBAAU,WACRV,MACC,IAGD,cAAC,EAAD,CAAQvC,WAAYnE,EAAMmE,WAAYnC,KAAMA,EAAMwC,YAAagC,EAAMtC,cAAewC,EAActC,UAAWA,KC7C3GiD,EAAQC,YAAe,CAC3BC,QAAS,CACP7F,QAAS,CACP8F,KAAM,WAERC,WAAY,CACVC,QAAS,UACTC,KAAM,WAERC,UAAW,CACTJ,KAAM,cAKG,SAASK,KACtB,OACE,eAACC,EAAA,EAAD,CAAeT,MAAOA,EAAtB,UACE,cAACU,EAAA,EAAD,IACA,cAAC,IAAD,CAAYC,SAAS,eAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOrC,KAAK,iBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCxCZ,IAYesC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,GAAD,MAEFe,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.05944bfc.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { AppBar, Box, Toolbar } from \"@material-ui/core\";\n\nexport const NavBar = (props) => {\n  return (\n    <React.Fragment>\n      <Box className=\"testing\" style={{\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"300px\",\n        top: \"-250px\",\n        zIndex: \"10\",\n        backgroundColor: \"#c30a13\"\n      }}></Box>\n      <AppBar position=\"sticky\" style={{ clipPath: \"inset(0px -10px -10px -10px)\" }}>\n        <Toolbar>\n          {props.button}\n          <Typography variant=\"h6\">Xlink Mobile</Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { NavBar } from \"./NavBar\";\n\nexport const Home = () => {\n  return (\n    <React.Fragment>\n      <Box bgcolor=\"white\" width=\"100vw\" height=\"100vh\" style={{\n        position: \"fixed\",\n        zIndex: \"-1\",\n      }}></Box>\n        <NavBar></NavBar>\n        <Box p={2}>\n          <Typography variant=\"h4\">Report Lists</Typography>\n        </Box>\n        <List>\n          <ListItem divider button component=\"a\" href=\"#/collect-cows\">\n            <ListItemText primary=\"Collect Cows\"></ListItemText>\n          </ListItem>\n          <ListItem divider button component=\"a\" href=\"#/cows-due\">\n            <ListItemText primary=\"Cows Due\"></ListItemText>\n          </ListItem>\n        </List>\n      \n\n    </React.Fragment>);\n};\n","import React, { Component, useState } from \"react\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Chip, Grid, Accordion, Typography, AccordionSummary, AccordionDetails } from \"@material-ui/core\";\n\nclass Data extends Component {\n  render() {\n    return (\n      <div>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {this.props.label}\n        </Typography>\n        <Typography style={{ fontSize: 16 }} variant=\"body1\">\n          {this.props.data}\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport var AccordianCowCard = (props) => {\n  var list = Object.keys(props.data);\n  var mainItem = list[0];\n  var toplist = list.slice(1, 4);\n  var botlist = list.slice(4);\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1bh-content\"\n        id=\"panel1bh-header\"\n      >\n        <Grid container justify=\"space-around\" spacing={1}>\n          <Grid item xs={2}>\n            <Chip color=\"primary\" label={props.data[mainItem]}></Chip>\n          </Grid>\n\n          {toplist.map(ele => <Grid item>\n            <Data label={ele} data={props.data[ele]}></Data>\n          </Grid>\n          )}\n        </Grid>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container spacing={1}>\n          {botlist.map(ele => <Grid item xs={4} xm={3}>\n            <Data label={ele} data={props.data[ele]}></Data>\n          </Grid>\n          )}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n","import React from \"react\";\nimport { Accordion, AccordionSummary, Grid } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nexport const SkeletonCowCard = () => {\n  return (\n    <Accordion>\n      <AccordionSummary\n        aria-controls=\"panel1bh-content\"\n        id=\"panel1bh-header\"\n      >\n        <Grid container justify=\"space-around\" spacing={1}>\n          <Grid item xs={2}>\n            <Skeleton variant=\"circle\" width={40} height={40} />\n          </Grid>\n          <Grid item xs={10}>\n            <Skeleton variant=\"text\" animation=\"wave\" />\n            <Skeleton variant=\"text\" animation=\"wave\" />\n          </Grid>\n        </Grid>\n      </AccordionSummary>\n    </Accordion>);\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, IconButton } from \"@material-ui/core\";\nimport { ArrowBackIos } from \"@material-ui/icons\";\nimport { AccordianCowCard } from \"./AccordianCowCard\";\nimport Pullable from 'react-pullable';\nimport { NavBar } from \"./NavBar\";\nimport { SkeletonCowCard } from \"./SkeletonCowCard\";\n\nexport const Report = (props) => {\n  const BackButton = (\n    <IconButton style={{ color: \"white\" }} edge=\"start\" href=\"#\">\n      <ArrowBackIos></ArrowBackIos>\n    </IconButton>);\n\n  return (\n    <React.Fragment>\n      <Box bgcolor=\"white\" width=\"100vw\" height=\"100vh\" style={{\n        position: \"fixed\",\n        zIndex: \"-1\",\n      }}></Box>\n        <NavBar button={BackButton}></NavBar>\n        <Pullable onRefresh={props.refreshReport}>\n          <Box bgcolor=\"white\">\n\n            <Box p={2}>\n\n              <Typography variant=\"h4\">{props.reportName + (props.isLoading ? \"\" : \" - \" + props.data.length)}</Typography>\n            </Box>\n            {props.data.map(row => props.isLoading ? <SkeletonCowCard></SkeletonCowCard> : <AccordianCowCard data={row}></AccordianCowCard>)}\n            <Box p={2}>\n            <Typography variant=\"body2\" style={{ fontSize: 13 }} color=\"textSecondary\" align=\"center\">Data last fetched: {props.refreshTime}</Typography>\n          </Box>\n          </Box>\n    \n        </Pullable>\n      \n    </React.Fragment>\n  );\n};\n","\n\nexport function prioritizeData(datas, priorityFields = []) {\n  console.log(\"datas: \" + datas);\n\n  var sort = (x, y) => {\n    var xInd = priorityFields.indexOf(x);\n    var yInd = priorityFields.indexOf(y);\n\n    xInd = xInd == -1 ? 1000 : xInd;\n    yInd = yInd == -1 ? 1000 : yInd;\n\n    if (xInd < yInd) {\n      return -1;\n    } else {\n      return 0;\n    }\n  };\n\n  var ordered = datas.map(function (data) {\n    return Object.keys(data).sort(sort).reduce(\n      (obj, key) => {\n        obj[key] = data[key];\n        return obj;\n      },\n      {}\n    );\n  });\n\n  console.log(\"ordered: \" + ordered);\n\n  return ordered;\n}\n","const XLINK_API_BASE = \"https://xlink-worker.jcdeichmann.workers.dev/\"\n\n\nexport const fetchCollectCows = () => {\n    return fetchFromXlink(\"collect-cows\")\n}\n\nexport const fetchCowsDue = () => {\n    return fetchFromXlink(\"cows-due\")\n}\n\nconst fetchFromXlink = (path) => {\n    return fetch(XLINK_API_BASE + path)\n      .then(res => res.json())\n}","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { Report } from \"./Report\";\nimport { prioritizeData } from \"../lib/prioritizeData\";\nimport { fetchCollectCows, fetchCowsDue } from \"../lib/xlinkClient\";\n\nexport const CollectCowsReport = (props) => {\n  const priorityFields = [\"Animal Number\", \"Away\", \"Day Production\", \"Lactation days\"]\n  return (<ReportWithData reportName=\"Collect Cows\" fetchData={fetchCollectCows} priorityFields={priorityFields}></ReportWithData>)\n};\n\nexport const CowsDueReport = (props) => {\n  const priorityFields = [\"Animal Number\", \"Animal Name\", \"Expected Calving Date\"]\n  var dataToPrependd = [\n    {\"Animal Number\": \"12\", \"Animal Name\": \"Brittney L\", \"Expected Calving Date\": \"2/24/23\", \"Age\": \"30\", \"Animal Life No.\": \"\", \"Lactation No.\": \"3\", \"What?\": \"Yes, you're pregnant!\"}\n  ]\n  return (<ReportWithData reportName=\"Cows Due\" fetchData={fetchCowsDue} priorityFields={priorityFields} dataToPrepend={dataToPrependd}></ReportWithData>)\n};\n\n\nconst ReportWithData = (props) => {\n  \n  const [data, setData] = useState([null, null, null, null, null, null, null]);\n  const [isLoading, setLoading] = useState(true);\n  const [time, setTime] = useState(\"never\");\n\n  var fetchNewData = () => {\n    setLoading(true);\n    props.fetchData()\n      .then(\n        async (result) => {\n          await new Promise(r => setTimeout(r, 300));\n          var dd = prioritizeData(result, props.priorityFields);\n          console.log(\"here\")\n          if (props.dataToPrepend) {\n            console.log(props.dataToPrepend)\n            dd = dd.slice(0, 3).concat(props.dataToPrepend).concat(dd.slice(3))\n          }\n          setData(dd);\n          setLoading(false);\n          setTime(moment().format('h:mm a'));\n\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(\"error happened....\");\n        }\n      );\n  };\n\n  useEffect(() => {\n    fetchNewData();\n  }, []);\n\n  return (\n    <Report reportName={props.reportName} data={data} refreshTime={time} refreshReport={fetchNewData} isLoading={isLoading}></Report>\n  );\n}","import React from \"react\";\nimport { createMuiTheme, CardActionArea, Divider, TextField, ThemeProvider, Icon, CssBaseline } from \"@material-ui/core\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\nimport { Home } from \"./components/Home\";\nimport { CollectCowsReport, CowsDueReport } from \"./components/Reports\";\n\n\nconst theme = createMuiTheme({ \n  palette: {\n    primary: {\n      main: \"#c30a13\"\n    },\n    background: {\n      default: \"#c30a13\",\n      body: \"#c30a13\"\n    },\n    secondary: {\n      main: \"#0ac3ba\"\n    }\n  }\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline></CssBaseline>\n      <HashRouter basename=\"xlink-viewer\">\n        <Switch>\n          <Route path=\"/collect-cows/\">\n            <CollectCowsReport></CollectCowsReport>\n          </Route>\n          <Route path=\"/cows-due/\">\n            <CowsDueReport></CowsDueReport>\n          </Route>\n          <Route path=\"/\">\n            <Home></Home>\n          </Route>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider >\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}